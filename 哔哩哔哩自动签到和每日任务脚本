/**
 * 哔哩哔哩自动签到和每日任务脚本 - 青龙面板版
 * 
 * 功能：
 * 1. 每日签到
 * 2. 观看视频
 * 3. 分享视频
 * 4. 投币
 * 5. 直播签到
 * 6. 漫画签到
 * 7. 银瓜子兑换硬币
 * 
 * 使用说明：
 * 1. 在青龙面板中安装依赖: axios, crypto-js
 * 2. 设置环境变量：BILIBILI_COOKIE
 * 3. 可选环境变量：
 *    - BILIBILI_COIN_NUM: 每日投币数量，默认5
 *    - BILIBILI_COIN_RESERVE: 保留硬币数，低于此值不再投币，默认50
 *    - BILIBILI_SELECT_LIKE: 投币时是否点赞，默认否
 *    - BILIBILI_COIN_PRIORITY: 投币策略 0=热门视频, 1=关注用户，默认1
 * 
 * cron: 30 8 * * *
 */

const axios = require('axios');
const CryptoJS = require('crypto-js');

// 配置
const CONFIG = {
    COIN_NUMBER: process.env.BILIBILI_COIN_NUM || 5, // 每日投币数量
    COIN_RESERVE: process.env.BILIBILI_COIN_RESERVE || 50, // 保留硬币数
    SELECT_LIKE: process.env.BILIBILI_SELECT_LIKE === 'true' ? 1 : 0, // 投币时是否点赞
    COIN_PRIORITY: process.env.BILIBILI_COIN_PRIORITY || 1, // 投币策略 0=热门视频, 1=关注用户
    USER_AGENT: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36 Edg/91.0.864.59'
};

// 全局变量
const COOKIE = process.env.BILIBILI_COOKIE;
let biliUserInfo = {}; // 用户信息
let totalCoinToday = 0; // 今日已投币数
let needCoins = 0; // 今日还需投币数

// 工具方法
const $ = {
    log: (msg) => {
        console.log(`\n[${new Date().toLocaleString()}] ${msg}\n`);
    },
    wait: (ms) => new Promise(resolve => setTimeout(resolve, ms)),
    randomNum: (min, max) => Math.floor(Math.random() * (max - min + 1) + min),
    extractCookieValue: (cookie, key) => {
        const match = cookie.match(new RegExp(`${key}=([^;]+)`));
        return match ? match[1] : null;
    }
};

// 请求配置
const createAxiosInstance = () => {
    const instance = axios.create({
        headers: {
            'Cookie': COOKIE,
            'User-Agent': CONFIG.USER_AGENT,
            'Referer': 'https://www.bilibili.com',
            'Origin': 'https://www.bilibili.com'
        },
        timeout: 10000
    });
    
    // 响应拦截器
    instance.interceptors.response.use(
        response => {
            return response.data;
        },
        error => {
            $.log(`请求失败: ${error.message}`);
            return Promise.reject(error);
        }
    );
    
    return instance;
};

const api = createAxiosInstance();

// 哔哩哔哩接口
const biliAPI = {
    // 用户信息
    getUserInfo: () => api.get('https://api.bilibili.com/x/web-interface/nav'),
    // 获取硬币数量
    getCoinBalance: () => api.get('https://account.bilibili.com/site/getCoin'),
    // 获取今日投币获得的经验
    getExpRewardStatus: () => api.get('https://www.bilibili.com/plus/account/exp.php'),
    // 签到
    doSignIn: () => api.get('https://api.bilibili.com/x/web-interface/nav'),
    // 获取热门视频
    getHotVideos: () => api.get('https://api.bilibili.com/x/web-interface/popular?ps=50&pn=1'),
    // 获取关注用户最新视频
    getFollowingVideos: () => api.get('https://api.bilibili.com/x/polymer/web-dynamic/v1/feed/all?type=video&page=1'),
    // 观看视频
    watchVideo: (aid, bvid, duration = 30) => api.post('https://api.bilibili.com/x/click-interface/web/heartbeat', {
        aid: aid,
        bvid: bvid,
        cid: '',
        csrf: $.extractCookieValue(COOKIE, 'bili_jct'),
        played_time: duration,
        realtime: duration,
        start_ts: Math.floor(Date.now() / 1000),
        type: 3,
        dt: 2,
        play_type: 1
    }),
    // 分享视频
    shareVideo: (aid, bvid) => api.post('https://api.bilibili.com/x/web-interface/share/add', 
        `aid=${aid}&bvid=${bvid}&csrf=${$.extractCookieValue(COOKIE, 'bili_jct')}`),
    // 投币
    addCoin: (aid, bvid, multiply = 1, select_like = CONFIG.SELECT_LIKE) => api.post('https://api.bilibili.com/x/web-interface/coin/add', 
        `aid=${aid}&bvid=${bvid}&multiply=${multiply}&select_like=${select_like}&csrf=${$.extractCookieValue(COOKIE, 'bili_jct')}`),
    // 直播签到
    doLiveSignIn: () => api.get('https://api.live.bilibili.com/xlive/web-ucenter/v1/sign/DoSign'),
    // 漫画签到
    doMangaSignIn: () => api.post('https://manga.bilibili.com/twirp/activity.v1.Activity/ClockIn', 
        `csrf=${$.extractCookieValue(COOKIE, 'bili_jct')}`),
    // 银瓜子兑换硬币
    exchangeSilver2Coin: () => api.post('https://api.live.bilibili.com/xlive/revenue/v1/wallet/silver2coin', 
        `csrf=${$.extractCookieValue(COOKIE, 'bili_jct')}&csrf_token=${$.extractCookieValue(COOKIE, 'bili_jct')}`)
};

// 业务逻辑
// 1. 获取用户信息
async function getUserInfo() {
    try {
        const res = await biliAPI.getUserInfo();
        if (res.code === 0) {
            biliUserInfo = res.data;
            $.log(`登录成功: ${biliUserInfo.uname}`);
            $.log(`当前等级: ${biliUserInfo.level_info.current_level}`);
            $.log(`当前经验: ${biliUserInfo.level_info.current_exp} / ${biliUserInfo.level_info.next_exp}`);
            return true;
        } else {
            $.log(`获取用户信息失败: ${res.message}`);
            return false;
        }
    } catch (error) {
        $.log(`获取用户信息异常: ${error.message}`);
        return false;
    }
}

// 2. 获取硬币数量
async function getCoinBalance() {
    try {
        const res = await biliAPI.getCoinBalance();
        if (res.code === 0) {
            $.log(`当前硬币数: ${res.data.money}`);
            return res.data.money;
        } else {
            $.log(`获取硬币数量失败: ${res.message}`);
            return 0;
        }
    } catch (error) {
        $.log(`获取硬币数量异常: ${error.message}`);
        return 0;
    }
}

// 3. 获取今日投币获得的经验
async function getExpRewardStatus() {
    try {
        const res = await biliAPI.getExpRewardStatus();
        if (res.code === 0) {
            totalCoinToday = res.data.coins_av / 10;
            $.log(`今日已投币: ${totalCoinToday} 个`);
            needCoins = Math.max(0, Math.min(CONFIG.COIN_NUMBER, 5) - totalCoinToday);
            $.log(`今日还需投币: ${needCoins} 个`);
            return needCoins;
        } else {
            $.log(`获取投币情况失败: ${res.message}`);
            return 0;
        }
    } catch (error) {
        $.log(`获取投币情况异常: ${error.message}`);
        return 0;
    }
}

// 4. 每日签到
async function doSignIn() {
    try {
        const res = await biliAPI.doSignIn();
        if (res.code === 0 && res.data.isLogin) {
            $.log(`签到成功! 本月签到次数: ${res.data.sign_days}`);
            return true;
        } else {
            $.log(`签到失败: ${res.message}`);
            return false;
        }
    } catch (error) {
        $.log(`签到异常: ${error.message}`);
        return false;
    }
}

// 5. 获取视频列表
async function getVideoList() {
    try {
        let videos = [];
        if (CONFIG.COIN_PRIORITY === '0') {
            // 获取热门视频
            const res = await biliAPI.getHotVideos();
            if (res.code === 0) {
                videos = res.data.list.map(item => ({
                    aid: item.aid,
                    bvid: item.bvid,
                    title: item.title,
                    duration: item.duration
                }));
            }
        } else {
            // 获取关注用户视频
            const res = await biliAPI.getFollowingVideos();
            if (res.code === 0) {
                videos = res.data.items
                    .filter(item => item.type === 'DYNAMIC_TYPE_AV')
                    .map(item => ({
                        aid: item.modules.module_dynamic.major.archive.aid,
                        bvid: item.modules.module_dynamic.major.archive.bvid,
                        title: item.modules.module_dynamic.major.archive.title,
                        duration: item.modules.module_dynamic.major.archive.duration
                    }));
            }
        }
        
        if (videos.length === 0) {
            // 备用：如果没有获取到，就使用热门视频
            const res = await biliAPI.getHotVideos();
            if (res.code === 0) {
                videos = res.data.list.map(item => ({
                    aid: item.aid,
                    bvid: item.bvid,
                    title: item.title,
                    duration: item.duration
                }));
            }
        }
        
        $.log(`获取到 ${videos.length} 个视频`);
        return videos;
    } catch (error) {
        $.log(`获取视频列表异常: ${error.message}`);
        return [];
    }
}

// 6. 观看视频
async function watchVideo(videoList) {
    if (videoList.length === 0) return false;
    
    try {
        // 随机选择一个视频
        const randomIndex = $.randomNum(0, videoList.length - 1);
        const video = videoList[randomIndex];
        
        $.log(`正在观看视频: ${video.title}`);
        const res = await biliAPI.watchVideo(video.aid, video.bvid, 30);
        
        if (res.code === 0) {
            $.log(`观看视频成功`);
            return { success: true, video };
        } else {
            $.log(`观看视频失败: ${res.message}`);
            return { success: false };
        }
    } catch (error) {
        $.log(`观看视频异常: ${error.message}`);
        return { success: false };
    }
}

// 7. 分享视频
async function shareVideo(video) {
    if (!video) return false;
    
    try {
        $.log(`正在分享视频: ${video.title}`);
        const res = await biliAPI.shareVideo(video.aid, video.bvid);
        
        if (res.code === 0) {
            $.log(`分享视频成功`);
            return true;
        } else {
            $.log(`分享视频失败: ${res.message}`);
            return false;
        }
    } catch (error) {
        $.log(`分享视频异常: ${error.message}`);
        return false;
    }
}

// 8. 投币
async function addCoins(videoList) {
    if (videoList.length === 0 || needCoins <= 0) return 0;
    
    try {
        let coinBalance = await getCoinBalance();
        if (coinBalance < CONFIG.COIN_RESERVE) {
            $.log(`硬币余额低于保留值 ${CONFIG.COIN_RESERVE}，不再投币`);
            return 0;
        }
        
        const maxCoins = Math.min(needCoins, coinBalance - CONFIG.COIN_RESERVE);
        if (maxCoins <= 0) {
            $.log(`没有足够的硬币用于投币操作`);
            return 0;
        }
        
        $.log(`开始投币，计划投币 ${maxCoins} 个`);
        let successCount = 0;
        
        // 打乱视频列表顺序
        const shuffledVideos = videoList.sort(() => Math.random() - 0.5);
        
        for (let i = 0; i < shuffledVideos.length && successCount < maxCoins; i++) {
            const video = shuffledVideos[i];
            $.log(`投币视频: ${video.title}`);
            
            const res = await biliAPI.addCoin(video.aid, video.bvid, 1, CONFIG.SELECT_LIKE);
            
            if (res.code === 0) {
                $.log(`投币成功`);
                successCount++;
                // 防止频繁操作
                await $.wait(2000);
            } else {
                $.log(`投币失败: ${res.message}`);
                await $.wait(1000);
            }
        }
        
        $.log(`投币任务完成，成功投币 ${successCount} 个`);
        return successCount;
    } catch (error) {
        $.log(`投币任务异常: ${error.message}`);
        return 0;
    }
}

// 9. 直播签到
async function doLiveSignIn() {
    try {
        const res = await biliAPI.doLiveSignIn();
        if (res.code === 0) {
            $.log(`直播签到成功，获得 ${res.data.text}`);
            return true;
        } else {
            $.log(`直播签到失败: ${res.message}`);
            return false;
        }
    } catch (error) {
        $.log(`直播签到异常: ${error.message}`);
        return false;
    }
}

// 10. 漫画签到
async function doMangaSignIn() {
    try {
        const res = await biliAPI.doMangaSignIn();
        if (res.code === 0) {
            $.log(`漫画签到成功`);
            return true;
        } else {
            $.log(`漫画签到失败: ${res.message}`);
            return false;
        }
    } catch (error) {
        $.log(`漫画签到异常: ${error.message}`);
        return false;
    }
}

// 11. 银瓜子兑换硬币
async function exchangeSilver2Coin() {
    try {
        const res = await biliAPI.exchangeSilver2Coin();
        if (res.code === 0) {
            $.log(`银瓜子兑换成功，获得 ${res.data.coin} 个硬币`);
            return true;
        } else {
            $.log(`银瓜子兑换失败: ${res.message}`);
            return false;
        }
    } catch (error) {
        $.log(`银瓜子兑换异常: ${error.message}`);
        return false;
    }
}

// 主函数
async function main() {
    $.log('🔔 哔哩哔哩自动任务开始');
    
    if (!COOKIE) {
        $.log('⚠️ 未设置BILIBILI_COOKIE，请先在环境变量中配置');
        return;
    }
    
    // 登录检查
    const isLogin = await getUserInfo();
    if (!isLogin) {
        $.log('⚠️ 登录失败，请检查Cookie是否有效');
        return;
    }
    
    // 获取经验状态
    await getExpRewardStatus();
    
    // 每日任务
    await doSignIn();
    
    // 直播签到
    await doLiveSignIn();
    
    // 漫画签到
    await doMangaSignIn();
    
    // 获取视频列表
    const videoList = await getVideoList();
    
    // 观看视频
    const watchResult = await watchVideo(videoList);
    
    // 分享视频
    if (watchResult.success) {
        await shareVideo(watchResult.video);
    }
    
    // 投币
    await addCoins(videoList);
    
    // 银瓜子兑换硬币
    await exchangeSilver2Coin();
    
    $.log('🎉 哔哩哔哩自动任务完成');
}

// 执行
main().catch(error => {
    $.log(`❌ 运行异常: ${error.message}`);
});
